---
name: "Renderer architecture"
description: "Views are thin; feature-first modules hold types/service/store."
globs: ["app/renderer/**/*"]
alwaysApply: true
---

- Views (`src/views/`):
  - Page-level Svelte files, minimal logic.
  - Compose shared components and feature stores/services.
- Features (`src/ts/features/<name>/`):
  - `types.ts`: type definitions
  - `service.ts`: IO (e.g., IPC via preload), side-effects
  - `store.ts`: Svelte stores, state transitions
- Shared UI (`src/components/`): atomic/composable components.
- Styles (`src/styles/`): global styles; keep component styles local in Svelte where possible.
- Entry: `index.html` → `/src/ts/main.ts` → mount `@views/App.svelte`.

