@use '../base/mixins' as m;

@layer components {
  /* Header */
  .gc-header {
    position: sticky;
    top: 0;
    z-index: var(--z-header);
    @include m.surface;
    padding: 0.5rem 0;
    
    &__inner {
      width: 90vw;
      max-width: 1500px;
      margin-left: auto;
      margin-right: auto;
      display: flex;
      align-items: center;
      justify-content: space-between;
    }
    
    &__left {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      flex-shrink: 0;
      
      /* Align icon content to the left within button */
      .gc-icon-btn {
        justify-content: flex-start;
        padding-left: 0.375rem;
        
        /* First button should be flush left */
        &:first-child {
          padding-left: 0;
        }
      }
    }
    
    &__center {
      flex: 1;
      display: flex;
      align-items: center;
      justify-content: center;
      min-width: 0; /* Allow text truncation */
      padding: 0 1rem; /* Add padding to center content for spacing */
    }
    
    &__right {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      flex-shrink: 0;
      
      /* Align icon content to the right within button */
      .gc-icon-btn {
        justify-content: flex-end;
        padding-right: 0.375rem;
        
        /* Last button should be flush right */
        &:last-child {
          padding-right: 0;
        }
      }
    }
  }

  /* Footer */
  .gc-footer {
    @include m.surface;
    padding: 0.75rem 0;
    
    &__inner {
      width: 90vw;
      max-width: 1500px;
      margin-left: auto;
      margin-right: auto;
      padding: 0 1rem;
      text-align: center;
      color: var(--color-muted);
    }
  }

  /* Backdrops (shared) */
  .gc-sidebar-backdrop,
  .gc-modal-backdrop {
    position: fixed;
    margin: 0;
    inset: 0;
    background: rgba(0,0,0,0.5);
  }
  /* Maintain specific stacking for each backdrop */
  .gc-sidebar-backdrop { z-index: var(--z-sidebar-backdrop); }
  /* Modal backdrop is inside .gc-modal stacking context; keep lower than dialog */
  .gc-modal-backdrop { z-index: 0; }

  /* Sidebar */
  .gc-sidebar {
    position: fixed;
    margin: 0;
    inset: 0 auto 0 0;
    width: 280px;
    transform: translateX(-100%);
    @include m.surface;
    @include m.transition(transform);
    z-index: var(--z-sidebar);
    padding: 1rem;
    overflow-y: auto;
    overscroll-behavior: contain;
    -webkit-overflow-scrolling: touch;
  }
  .gc-sidebar--open { transform: translateX(0); }

  /* Modal */
  .gc-modal {
    position: fixed;
    inset: 0;
    display: grid;
    place-items: center;
    z-index: var(--z-modal);
    padding: 1rem;
  }
  .gc-modal__dialog {
    @include m.surface;
    /* Default: fit content with responsive constraints */
    width: max-content;
    min-width: min(300px, calc(100vw - 2rem));
    max-width: min(90vw, 600px); /* default medium */
    padding: 1rem;
    box-shadow: var(--shadow-md);
    position: relative;
    box-sizing: border-box;
    max-height: 90vh;
    overflow-y: auto;
    z-index: 1;
    
    /* Prevent content from making dialog too wide */
    & > * {
      max-width: 100%;
      overflow-x: auto;
    }
    
    /* Size variants */
    &--small {
      max-width: min(90vw, 400px);
    }
    
    &--medium {
      max-width: min(90vw, 600px);
    }
    
    &--large {
      max-width: min(90vw, 900px);
    }
    
    &--full {
      max-width: 90vw;
      width: 90vw;
    }
  }

  /* Demo helpers for styleguide (kept scoped and non-intrusive) */
  .demo-box {
    background: var(--color-surface);
    border: 1px dashed var(--color-border);
    padding: 1rem;
  }
}


