{
  "name": "gcomputer",
  "version": "0.0.1",
  "description": "GComputer - A local-first personal operating layer for file management and automation",
  "private": true,
  "main": "dist/main/index.cjs",
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "dev": "node scripts/copy-wasm.js && concurrently -k -n \"renderer,main,preload,electron\" -c \"cyan,magenta,green,yellow\" \"vite\" \"npm:dev:main\" \"npm:dev:preload\" \"wait-on tcp:5173 dist/main/index.cjs && cross-env VITE_DEV_SERVER_URL=http://localhost:5173 electron dist/main/index.cjs\"",
    "dev:main": "node scripts/copy-wasm.js && esbuild app/main/main.ts --bundle --format=cjs --outfile=dist/main/index.cjs --platform=node --external:electron --sourcemap --watch",
    "dev:preload": "esbuild app/preload/index.ts --bundle --format=cjs --outfile=dist/preload/index.cjs --platform=node --external:electron --sourcemap --watch",
    "build": "rm -rf dist && node scripts/copy-wasm.js && esbuild app/main/main.ts --bundle --format=cjs --outfile=dist/main/index.cjs --platform=node --external:electron --sourcemap && esbuild app/preload/index.ts --bundle --format=cjs --outfile=dist/preload/index.cjs --platform=node --external:electron --sourcemap && vite build && cp .env dist/.env 2>/dev/null || true",
    "typecheck": "tsc --noEmit",
    "test": "vitest",
    "test:ui": "vitest --ui",
    "test:run": "vitest run",
    "test:coverage": "vitest run --coverage || true",
    "test:watch": "vitest --watch",
    "test:main": "vitest run app/main",
    "test:renderer": "vitest run app/renderer",
    "test:db": "npm --workspace @gcomputer/db run test",
    "postinstall": "electron-builder install-app-deps",
    "build:all": "npm run build && npm run package:all",
    "build:win": "npm run build && npm run package:win",
    "build:mac": "npm run build && npm run package:mac",
    "build:linux": "npm run build && npm run package:linux",
    "package:all": "electron-builder --publish=never",
    "package:win": "electron-builder --win --publish=never",
    "package:mac": "electron-builder --mac --publish=never",
    "package:linux": "electron-builder --linux --publish=never",
    "clean": "rm -rf dist/ release/ node_modules/.cache",
    "clean:build": "npm run clean && npm run build",
    "clean:build:win": "npm run clean && npm run build && npm run package:win",
    "clean:build:all": "npm run clean && npm run build && npm run package:all"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@electron/rebuild": "^4.0.1",
    "@sveltejs/vite-plugin-svelte": "^6.1.0",
    "@testing-library/jest-dom": "^6.7.0",
    "@testing-library/svelte": "^5.2.0-next.3",
    "@testing-library/user-event": "^14.6.1",
    "@types/cors": "^2.8.19",
    "@types/express": "^5.0.3",
    "@types/node": "^24.3.0",
    "@types/sql.js": "^1.4.9",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "autoprefixer": "^10.4.21",
    "concurrently": "^9.2.0",
    "cross-env": "^10.0.0",
    "electron": "^28.3.3",
    "electron-builder": "^26.0.12",
    "esbuild": "^0.23.0",
    "happy-dom": "^18.0.1",
    "jsdom": "^26.1.0",
    "msw": "^2.10.5",
    "postcss": "^8.5.6",
    "sass": "^1.90.0",
    "svelte": "^5.38.0",
    "svelte-preprocess": "^6.0.3",
    "tailwindcss": "^3.4.14",
    "typescript": "^5.9.2",
    "vite": "^7.1.1",
    "vitest": "^3.2.4",
    "wait-on": "^8.0.2"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.60.0",
    "cors": "^2.8.5",
    "drizzle-orm": "^0.44.4",
    "exifr": "^7.1.3",
    "express": "^5.1.0",
    "jsonpath-plus": "^10.3.0",
    "mammoth": "^1.10.0",
    "openai": "^5.12.2",
    "pdf-parse": "^1.1.1",
    "sharp": "^0.34.3"
  },
  "build": {
    "appId": "com.gcomputer.app",
    "productName": "GComputer",
    "npmRebuild": false,
    "asar": false,
    "directories": {
      "output": "release"
    },
    "files": [
      "dist/**/*",
      "node_modules/**/*",
      "package.json",
      ".env"
    ],
    "extraResources": [
      {
        "from": "packages/db/data",
        "to": "db",
        "filter": [
          "**/*"
        ]
      }
    ],
    "mac": {
      "category": "public.app-category.productivity",
      "target": [
        {
          "target": "dmg",
          "arch": [
            "x64",
            "arm64"
          ]
        }
      ]
    },
    "win": {
      "forceCodeSigning": false,
      "target": [
        {
          "target": "portable",
          "arch": [
            "x64"
          ]
        }
      ]
    },
    "linux": {
      "target": [
        {
          "target": "AppImage",
          "arch": [
            "x64"
          ]
        }
      ]
    }
  }
}
